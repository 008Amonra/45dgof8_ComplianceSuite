name: Publish Blog Post

on:
  workflow_dispatch:
    inputs:
      title:
        description: Post title
        required: true
      subtitle:
        description: Optional subtitle
        required: false
      date:
        description: YYYY-MM-DD (optional; defaults to today UTC)
        required: false
      content_b64:
        description: Base64-encoded HTML content
        required: true

# âœ… allow pushing
permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0           # full history (safe for commits)
          persist-credentials: true

      - name: Ensure jq is available
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Ensure blogposts.json exists
        run: |
          [ -f blogposts.json ] || echo "[]" > blogposts.json
          cat blogposts.json

      - name: Decode HTML content
        run: |
          echo "${{ inputs.content_b64 }}" | base64 --decode > content.html
          wc -c content.html

      - name: Append + sort with jq
        env:
          IN_TITLE: ${{ inputs.title }}
          IN_SUBTITLE: ${{ inputs.subtitle }}
          IN_DATE: ${{ inputs.date }}
        run: |
          DATE_VALUE="$IN_DATE"
          if [ -z "$DATE_VALUE" ]; then
            DATE_VALUE="$(date -u +%Y-%m-%d)"
          fi
          jq \
            --arg title "$IN_TITLE" \
            --arg subtitle "$IN_SUBTITLE" \
            --arg date "$DATE_VALUE" \
            --rawfile html content.html \
            '
            . + [{
              date: $date,
              title: $title,
              subtitle: ($subtitle // ""),
              contentHtml: $html
            }]
            | sort_by(.date) | reverse
            ' blogposts.json > blogposts.new.json
          mv blogposts.new.json blogposts.json
          echo "Publishing date: $DATE_VALUE"

      - name: Commit & push
        env:
          COMMIT_DATE: ${{ inputs.date }}
        run: |
          git config user.name "eva-bot"
          git config user.email "bot@users.noreply.github.com"
          git add blogposts.json
          DATE_VALUE="$COMMIT_DATE"
          if [ -z "$DATE_VALUE" ]; then
            DATE_VALUE="$(date -u +%Y-%m-%d)"
          fi
          git commit -m "blog: add post '${{ inputs.title }}' ($DATE_VALUE)" || echo "No changes"
          # push to the same branch this workflow ran on
          git push
